package HomeWork1;

public class Task_2 {
    public static void main(String[] args) {
        int a = 5;
        int b = 2;
        int c = 8;
        int d = 7;
        int e = 20;
        int f = 68;
        int g = 22;
        int h = 3;
        int i = 12;
        int j = 6;
        int k = 119;

        boolean tr = true;
        boolean fs = false;

        int dva1 = a + b / c; //скобок нет, вначале деление, потом сложение, но результат будет непривычным с т.зр. арифметики
        double dva1_priv = a + b / (double) c; //подсвечивает красным название переменной, т.к. думает, что тут очепятка в слове "privat"

        int dva2 = (a + b) / c; // тут все отработает, однако выполнение операции является бессмысленным -  "7" в числителе будет делиться на "8" в знаменателе, а вследствии усечения переменных типа int до целой части результатом такого деления будет "0"
        double dva2_priv = (double) (a + b) / c;
        //double dva1_inkorrect1 = (a + b) / c; //тут все отработает, однако выполнение операции является бессмысленным (получится 0)
        //int dva1_inkorrect2 = (double) (a + b) / c; //без приведения переменной, которой присваеваетс результат выражения, к double компиллироваться не будет, т.к. это приведет к потере данных

        int dva3 = (a + b++) / c; // тут скобки, поэтому вначале действие в скобках, потом деление (7/8) = 0, т.к. int , будет = 0 (бессмыссленно)
        double dva3_priv = (double) (a + b++) / c; // с приведением типов и с учетом постинкремента в выражении выше будет 1 (без него было бы как в 2.2 с приведением (0,875)

        int dva4 = (a + b++) / --c; // скобки + 2 предыдущих постинкремента + предекремент = (5+4)/7, будет 1, дробная часть отбросится
        double dva4_priv = (double) (a + b++) / --c; // скобки + 3 предыдущих постинкремента + 2 предыдущих предекремента = (5+5)/6 = 1,666...7

        int dva5 = (a * b >> b++) / --c; /*вначале в числителе в скобках умножение, потом постинкремент (с учетом предыдущих), потом арифметический сдвиг вправо, затем в знаменателе предекремент, потом делим числитель на знаменатель
                                          *(5*6/2^6)/5 получается 0 с учетом отброшенной дробной части*/
        double dva5_priv =  (double) (a * b >> b++) / --c; // (5*7/2^7)/4 = 0.09375......

        int dva6 = (a + d > e ? f : g * b >> b++) / --c;
        double dva6_priv = (double)(a + d > e ? f : g * b >> b++) / --c;

        //int dva7 = (a + d > e ? f >= f : g * b >> b++) / --c; // ошибка компиляции, в тернарном операторе один из возможных результатов - булево значение (сравнение 2-х чисел), второе - int или double

        boolean dva8 = j - b > h && i * i <= k; // сравнение 4>10 (сразу false, дальше не проверяет) И 144 <=119 (false) - false

        boolean dva9 = tr && fs; // true И false - false (для true оба д.быть true)




/*
    2.1 5 + 2 / 8
	2.2 (5 + 2) / 8
	2.3 (5 + 2++) / 8
	2.4 (5 + 2++) / --8
	2.5 (5 * 2 >> 2++) / --8
	2.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
	2.7 (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8
	2.8 6 - 2 > 3 && 12 * 12 <= 119
	2.9 true && false*/



      System.out.println("Ответ на №2.1 без приведения: " + " " + dva1 + " " + "потому что при делении intовых чисел и записи рез-та в int-переменную дробная часть отбрасывается");
      System.out.println("Ответ на №2.1 c приведением: " + " " + dva1_priv);
      System.out.println("Ответ на №2.2 без приведения: " + " " + dva2 + " " + "(при делении int чисел дробная часть отбрасывается)");
      System.out.println("Ответ на №2.2 c приведением: " + " " + dva2_priv);
      System.out.println("Ответ на №2.3 без приведения: " + " " + dva3);
      System.out.println("Ответ на №2.3 c приведением: " + " " + dva3_priv);
      System.out.println("Ответ на №2.4 без приведения: " + " " + dva4);
      System.out.println("Ответ на №2.4 c приведением:" + " " + dva4_priv);
      System.out.println("Ответ на №2.5 без приведения: " + " " + dva5);
      System.out.println("Ответ на №2.5 c приведением: " + " " + dva5_priv);
      System.out.println("Ответ на №2.6 без приведения: " + " " + dva6);
      System.out.println("Ответ на №2.6 c приведением: " + " " + dva6_priv);
      System.out.println("Ответ на №2.8: " + " " + dva8);
      System.out.println("Ответ на №2.9: " + " " + dva9);

    }


}
